#% text_encoding = iso8859_1

def_slotted_exemplar(
	:sonar_test_base,
	{
		{:name, _unset, :readable, :public},
		{:parent, _unset, :readable, :public},
		{:children, _unset, :readable, :public},
		{:start_time, _unset, :readable, :public},
		{:end_time, _unset, :readable, :public}
	},
	{})
$

_private _method sonar_test_base.init(p_name, _optional p_parent)
	## Initializer.
	.name << p_name
	.parent << p_parent
	.children << rope.new()
	.start_time << _unset
	.end_time << _unset
	
	_if .parent _isnt _unset
	_then
		.parent.children.add_last(_self)
	_endif
	_return _self
_endmethod
$

_private _method sonar_test_base.timestamp()
	## Get current timestamp
	_local (l_time_s, l_time_ms) << system.time_now()
	_return l_time_s + l_time_ms / 1000.0
_endmethod
$

_method sonar_test_base.start()
	## Start test
	.start_time << _self.timestamp()
	.end_time << _unset
_endmethod
$

_method sonar_test_base.end()
	## Finish test
	.end_time << _self.timestamp()
_endmethod
$

_method sonar_test_base.runtime_ms
	## Get the run time of this suite, in milliseconds
	_dynamic !print_float_precision! << 8
	_local l_runtime << .end_time - .start_time
	_return (l_runtime * 1000).rounded
_endmethod
$
